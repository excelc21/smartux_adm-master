<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org/DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="mainpanel">
	<typeAlias alias="mainpanelinfovo" type="com.dmi.smartux.mainpanel.vo.MainPanelInfoVO"/>
	<typeAlias alias="categoryinfovo" type="com.dmi.smartux.mainpanel.vo.CategoryInfoVO"/>
	<typeAlias alias="albuminfovo" type="com.dmi.smartux.mainpanel.vo.AlbumInfoVO"/>
	
	<select id="getMainPanelVersionInfo" resultClass="string">
		SELECT MAX(VERSION) AS VERSION FROM PT_UX_PANEL
	</select>
	
	<select id="getMainPanelInterlockingInfo" parameterClass="map" resultClass="mainpanelinfovo">
		SELECT CODE, P_CODE, PANELVIEWNAME, CATEGORY_CODE, CATEGORY_TYPE, UI_TYPE, DECODE(NVL(bg_img_file, NULL), NULL, '', F_SERVER_URL('I') || BG_IMG_FILE) AS PAGE_ICON, DESCRIPTION, ORDER_SEQ, PAGE_TYPE, PAGE_CODE, A.VERSION AS PDATA_VERSION
		FROM(
			SELECT PANNEL_ID, PANNEL_ID || '_' || TITLE_ID AS CODE, PANNEL_ID || DECODE(P_TITLE_ID, NULL, '', '_') || P_TITLE_ID AS P_CODE, TITLE_NM AS PANELVIEWNAME
			, DECODE(CATEGORY_TYPE,'CAT_MAP', PANNEL_ID || TITLE_ID || CATEGORY_ID, CATEGORY_ID) as CATEGORY_CODE 
			, CATEGORY_TYPE
			, UI_TYPE, BG_IMG_FILE, DESCRIPTION, ORDERED AS ORDER_SEQ, PAGE_TYPE, PAGE_CODE, VERSION
			FROM PT_UX_PANEL_TITLE
			START WITH P_TITLE_ID IS NULL 
			AND USE_YN = 'Y'
			CONNECT BY PRIOR TITLE_ID = P_TITLE_ID
			AND PRIOR PANNEL_ID = PANNEL_ID
		)A, PT_UX_PANEL B
		WHERE A.PANNEL_ID = B.PANNEL_ID
		AND B.USE_YN = 'Y'
		ORDER BY P_CODE, ORDER_SEQ
	</select>
	
	<select id="getCategoryIdAlbumcnt" resultClass="categoryinfovo">
		SELECT CONCAT(PANNEL_ID,TITLE_ID) AS PT_ID, CATEGORY_ID, ALBUM_CNT
		FROM PT_UX_PANEL_TITLE
		WHERE CATEGORY_TYPE = 'CAT_MAP'
	</select>
	
	<select id="getI20AlbumList" parameterClass="map" resultClass="albuminfovo">
		SELECT
			A.ALBUM_ID			AS ALBUM_ID,
			A.CAT_ID			AS CAT_ID,
			A.ALBUM_TITLE		AS ALBUM_TITLE,
			A.IMG_URL			AS IMG_URL,
			NVL(B.WIDTH_IMG, A.WIDTH_IMG)	AS W_IMG,
			NVL(B.HEIGHT_IMG, A.HEIGHT_IMG)	AS H_IMG,
			A.SERIES_FLAG		AS SERIES_FLAG,
			A.SERIES_DESC		AS SERIES_DESC,
			A.CLOSE_YN			AS CLOSE_YN,
			RANKING				AS RANK_NO,
			A.IS_HD				AS IS_HD,
			A.PROGRAM_INFO		AS PROGRAM_INFO,
			A.ONAIR_DATE		AS ONAIR_DATE,
			A.IS_CAPTION		AS IS_CAPTION,
			A.GENRE1			AS GENRE1,
			A.RELEASE_DATE		AS RELEASE_DATE,
			A.WATCH_RIGHT_YN	AS WATCH_RIGHT_YN,
			A.IS_FH				AS is_fh
		FROM
			(
			SELECT
				C.ADI_ALBUM_ID				AS ALBUM_ID,
				MAX(C.SERVICE_ICON)			AS SERVICE_GB,
				MAX(B.CATEGORY_ID)			AS CAT_ID,
				MAX(B.CONTENTS_NAME)		AS ALBUM_TITLE,
				MAX(G.HDCONTENT)			AS IS_HD,
				MAX(DECODE(G.HDCONTENT, 'N', 'Y', 'N'))	AS IS_SD,
				MAX(E.SUGGESTED_PRICE)		AS H_PRICE,
				MIN(E.SUGGESTED_PRICE)		AS S_PRICE,
				MAX(E.RATING)				AS PROGRAM_INFO,
				MAX(NVL(E.ONAIR_DATE, '00000000'))		AS ONAIR_DATE,
				MAX(DECODE(A.SERIES_YN, NULL, 'N', A.SERIES_YN))	AS SERIES_FLAG,
				MAX(DECODE(DECODE(A.SERIES_YN, NULL, 'N', A.SERIES_YN), 'Y', C.SERIES_NO, '')) AS SERIES_DESC,
				MAX(A.CLOSE_YN)				AS CLOSE_YN,
				MAX(G.SMI_YN)				AS IS_CAPTION,
				F_SERVER_URL('P')			AS IMG_URL,
				MAX(DECODE(F.POSTER_TYPE, 'Y', F.CONTENT_VALUE, '')) AS WIDTH_IMG,
				MAX(DECODE(F.POSTER_TYPE, 'V', F.CONTENT_VALUE, '')) AS HEIGHT_IMG,
				MAX(E.CATEGORY)				AS CATEGORY,
				MAX(B.RANK_NO)				AS RANKING,
				MAX(E.GENRE_LARGE)			AS GENRE1,
				MAX(E.RELEASE_DATE)			AS RELEASE_DATE,
				MAX(DECODE(C.WATCH_RIGHT_YN, NULL, 'Y', C.WATCH_RIGHT_YN))	AS WATCH_RIGHT_YN,
				MAX(DECODE(C.IS_FH, NULL, 'N', C.IS_FH)) AS IS_FH
			FROM  PT_VO_CATEGORY A,
				PT_VO_CATEGORY_MAP B,
				PT_LA_ALBUM_MST C,
				PT_LA_PACKAGE_ASSET D,
				PT_LA_TITLE_ASSET E,
				PT_LA_POSTER_ASSET F,
				PT_LA_CONTENT_ASSET G
			WHERE A.CATEGORY_ID = B.CATEGORY_ID
				AND   A.CATEGORY_ID = #category_id#
				AND   A.CATEGORY_GB  = 'I20'
				AND
				    (
				        (
				            (C.PRE_MAPPING_YN IS NULL OR C.PRE_MAPPING_YN = 'N') AND (B.VIEWING_FLAG = 'V' OR B.VIEWING_FLAG IS NULL)
				        )
				    OR
				        (
				            C.PRE_MAPPING_YN = 'Y' AND B.VIEWING_FLAG = 'V'
				        )
				    )
				AND   B.CONTENTS_ID  = C.ADI_ALBUM_ID
				AND   C.ADI_ALBUM_ID = D.ADI_ALBUM_ID
				AND   D.ADI_PRODUCT_ID = E.ADI_PRODUCT_ID
				AND   D.ADI_PRODUCT_ID = F.ADI_PRODUCT_ID
				AND   D.ADI_PRODUCT_ID = G.ADI_PRODUCT_ID
				AND   F.POSTER_TYPE IN ('Y', 'V', 'P')
			GROUP BY C.ADI_ALBUM_ID
			)A,
			PT_UX_PANEL_IMG B
		WHERE A.ALBUM_ID = B.ALBUM_ID(+)
		ORDER BY  RANKING
	</select>

	<select id="getNSCAlbumList" parameterClass="map" resultClass="albuminfovo">
		SELECT
			A.ALBUM_ID  AS ALBUM_ID,
			NVL(A.CAT_ID, #category_id#)   AS CAT_ID,
			A.ALBUM_TITLE  AS ALBUM_TITLE,
			A.IMG_URL   AS img_url,
			A.WIDTH_IMG   as W_IMG,
			A.HEIGHT_IMG   as H_IMG,
			A.SERIES_FLAG  AS SERIES_FLAG,
			A.SERIES_DESC  AS SERIES_DESC,
			A.CLOSE_YN  AS CLOSE_YN,
			RANKING   AS RANK_NO,
			A.IS_HD   AS IS_HD,
			A.PROGRAM_INFO AS PROGRAM_INFO,
			A.ONAIR_DATE  AS ONAIR_DATE,
			A.IS_CAPTION  AS IS_CAPTION,
			A.GENRE1   AS GENRE1,
			A.RELEASE_DATE AS RELEASE_DATE,
			A.watch_right_yn AS watch_right_yn,
			A.is_fh   AS is_fh,
			A.SERVICE_GB   AS SERVICE_GB
		FROM
			(
			SELECT
				C.ADI_ALBUM_ID          AS ALBUM_ID,
				MAX(C.SERVICE_ICON_HDTV)     AS SERVICE_GB,
				MAX(DECODE(DECODE(A.SERIES_YN, NULL, 'N', A.SERIES_YN), 'Y', A.CATEGORY_ID, '')) AS CAT_ID,
				MAX(B.CONTENTS_NAME)    AS ALBUM_TITLE,
				MAX(G.HDCONTENT)        AS IS_HD,
				MAX(DECODE(G.HDCONTENT, 'N', 'Y', 'N'))  AS IS_SD,
				MAX(E.SUGGESTED_PRICE)  AS H_PRICE,
				MIN(E.SUGGESTED_PRICE)  AS S_PRICE,
				MAX(E.RATING)           AS PROGRAM_INFO,
				MAX(NVL(E.ONAIR_DATE, '00000000')) AS ONAIR_DATE,
				MAX(DECODE(A.SERIES_YN, NULL, 'N', A.SERIES_YN))        AS SERIES_FLAG,
				MAX(DECODE(DECODE(A.SERIES_YN, NULL, 'N', A.SERIES_YN), 'Y', C.SERIES_NO, '')) AS SERIES_DESC,
				MAX(A.CLOSE_YN)   AS CLOSE_YN,
				MAX(G.SMI_YN)           AS IS_CAPTION,
				F_SERVER_URL('P')  AS IMG_URL,
				MIN(DECODE(H.MAIN_IMG_FILE_NAME ,NULL, '' , 'still/' || H.MAIN_IMG_FILE_NAME))      AS WIDTH_IMG,
				MAX(DECODE(F.POSTER_TYPE, 'P', 'poster/' || F.CONTENT_VALUE, '')) AS HEIGHT_IMG,
				MAX(E.CATEGORY)         AS CATEGORY,
				MAX(I.RANK_NO)          AS RANKING,
				MAX(E.GENRE_LARGE)  AS GENRE1,
				MAX(E.RELEASE_DATE)  AS RELEASE_DATE,
				MAX(DECODE(C.WATCH_RIGHT_YN, NULL, 'Y', C.WATCH_RIGHT_YN)) AS WATCH_RIGHT_YN,
				MAX(DECODE(C.IS_FH, NULL, 'N', C.IS_FH)) AS IS_FH
			FROM  PT_VO_CATEGORY A,
				PT_VO_CATEGORY_MAP B,
				PT_LA_ALBUM_MST C,
				PT_LA_PACKAGE_ASSET D,
				PT_LA_TITLE_ASSET E,
				PT_LA_POSTER_ASSET F,
				PT_LA_CONTENT_ASSET G,
				IMCSUSER.PT_LA_ALBUM_IMG H,
				(SELECT CONTENTS_ID, RANK_NO FROM PT_VO_CATEGORY_MAP WHERE CATEGORY_ID = #category_id#) I
			WHERE A.CATEGORY_ID = B.CATEGORY_ID
				AND   A.CATEGORY_GB  = 'NSC'
				AND
				    (
				        (
				            (C.PRE_MAPPING_YN IS NULL OR C.PRE_MAPPING_YN = 'N') AND (B.VIEWING_FLAG = 'V' OR B.VIEWING_FLAG IS NULL)
				        )
				    OR
				        (
				            C.PRE_MAPPING_YN = 'Y' AND B.VIEWING_FLAG = 'V'
				        )
				    )
				AND   B.CONTENTS_ID  = I.CONTENTS_ID
				AND   B.CONTENTS_ID  = C.ADI_ALBUM_ID
				AND   C.ADI_ALBUM_ID = D.NSC_ALBUM_ID
				AND   D.ADI_PRODUCT_ID = E.ADI_PRODUCT_ID
				AND   D.ADI_PRODUCT_ID = F.ADI_PRODUCT_ID
				AND   D.ADI_PRODUCT_ID = G.ADI_PRODUCT_ID
				AND   F.POSTER_TYPE = 'P'
				AND   B.CONTENTS_ID  = H.ADI_ALBUM_ID(+)
				AND   H.IMG_FLAG(+) = 'N'
			GROUP BY C.ADI_ALBUM_ID
			)A
		ORDER BY  RANKING
	</select>

	<!-- mims.xml로 이동 -->
	<!-- <update id="setMainPanelTitleVersion" parameterClass="map">
	   UPDATE 
	   		PT_UX_PANEL_TITLE 
       SET 
       		VERSION = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') 
 	   WHERE 
 	   		category_type = #category_type# 
       	AND TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')-VERSION >= 60
	</update> -->
	
</sqlMap>